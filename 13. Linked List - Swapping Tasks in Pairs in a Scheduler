13. Linked List - Swapping Tasks in Pairs in a Scheduler
import java.io.*;
import java.util.*;
class Node{
    int taskid;
    Node next;
    
    Node(int taskid){
        this.taskid=taskid;
        this.next=null;
    }
}
public class Solution {
    public static Node swap(Node head){
        if(head==null||head.next==null){
            return head;
        }
        //1,2,3,4  
        Node first=head;   //1   3   
        Node second=head.next;   //2   4   
        
        first.next=swap(second.next);   //first.next=swap(3)   first.nextt=swap(null)
        second.next=first;   //4.next=3
        
         return second; //4
    }

    public static void print(Node head) {
        while (head != null) {
            System.out.print(head.taskid + " ");
            head = head.next;
        }
    }

    
    public static void main(String[] args) {
       Scanner sc=new Scanner(System.in);
        
       int N= sc.nextInt();
        Node head=null, tail=null;
        for (int i=0;i<N;i++){
            int id=sc.nextInt();
            Node newNode=new Node(id);
            if(head==null){
                head=newNode;
                tail=newNode;
            }
            else{
                tail.next=newNode;
                tail=newNode;
            }
        }
        head=swap(head);
        print(head);
    }
}

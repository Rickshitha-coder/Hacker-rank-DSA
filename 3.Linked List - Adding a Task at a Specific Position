3.Linked List - Adding a Task at a Specific Position
import java.io.*;
import java.util.*;
class TaskNode{
    int id;
    TaskNode next;
    
    public TaskNode(int id){
        this.id=id;
        this.next=null;
    }
}

public class Solution {
    TaskNode head;
    
    public void insertatend(int id){
        TaskNode newNode=new TaskNode(id);
        if(head==null){
            head=newNode;
            return;
        }
        TaskNode temp=head;
        while(temp.next!=null){
            temp=temp.next;
        }
        temp.next=newNode;
        
    }
    public void insertatposition(int position,int id){
        TaskNode newNode=new TaskNode(id);
        
        if (position <= 0) {
            System.out.println("Invalid position");
            return;
        }

        if (position == 1) {
            newNode.next = head;
            head = newNode;
            return;
        }
        TaskNode temp = head;
        int count = 1;
        while (temp != null && count < position - 1) {
            temp = temp.next;
            count++;
        }

        if (temp == null) {
            System.out.println("Position out of range");
        } else {
            newNode.next = temp.next;
            temp.next = newNode;
           
        }
    }
    public void display() {
        if (head == null) {
            
            return;
        }
        TaskNode temp = head;
        
        while (temp != null) {
            System.out.print(temp.id + " ");
            temp = temp.next;
        }
        System.out.println();
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        Solution q=new Solution();
        int n=sc.nextInt();
        for(int i=0;i<n;i++){
            int taskid=sc.nextInt();
            q.insertatend(taskid);
        }
       
        int position=sc.nextInt();
        int newid=sc.nextInt();
        q.insertatposition(position,newid);
        q.display();
    }
}

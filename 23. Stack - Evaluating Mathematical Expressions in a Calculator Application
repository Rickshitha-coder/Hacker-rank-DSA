Date :  10-09-2025  HW
23. Stack - Evaluating Mathematical Expressions in a Calculator Application

import java.util.*;

public class ExpressionEvaluator {

    public static int evaluate(String s) {
        int n = s.length();
        int result = 0;      // final result
        int lastNum = 0;     // last calculated number
        int num = 0;         // current number being built
        char sign = '+';     // previous operator

        for (int i = 0; i < n; i++) {
            char ch = s.charAt(i);

            if (Character.isDigit(ch)) {
                num = num * 10 + (ch - '0'); // build number
            }

            // if operator OR last character
            if (!Character.isDigit(ch) && ch != ' ' || i == n - 1) {
                if (sign == '+') {
                    result += lastNum;  // commit previous number
                    lastNum = num;
                } else if (sign == '-') {
                    result += lastNum;
                    lastNum = -num;
                } else if (sign == '*') {
                    lastNum = lastNum * num;
                } else if (sign == '/') {
                    lastNum = lastNum / num; // Java auto-truncates toward zero
                }
                sign = ch;
                num = 0;
            }
        }
        result += lastNum; // add last pending number
        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String expression = sc.nextLine().trim();
        System.out.println(evaluate(expression));
    }
}

